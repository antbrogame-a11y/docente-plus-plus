name: Style Check

on:
  pull_request:
    branches: [ main, develop ]

# Required permissions for the workflow to post comments on PRs
# The GITHUB_TOKEN needs these permissions to interact with pull requests and issues
permissions:
  contents: read        # To check out the code
  pull-requests: write  # To comment on pull requests
  issues: write         # To comment on issues (PRs are issues)

jobs:
  check-styles:
    name: Check for hardcoded styles
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run theme token checker
      id: token-check
      run: |
        echo "Running MD3 token replacement checker..."
        node tools/replace-tokens.js --dir=./css --dry-run > token-check.log 2>&1 || true
        node tools/replace-tokens.js --dir=./src --dry-run >> token-check.log 2>&1 || true
        cat token-check.log
        
        # Check if there are any findings
        if grep -q "Files with findings: 0" token-check.log; then
          echo "‚úÖ No hardcoded values found!"
          echo "status=pass" >> $GITHUB_OUTPUT
        else
          echo "‚ö†Ô∏è  Hardcoded values detected - review recommended"
          echo "status=warn" >> $GITHUB_OUTPUT
        fi
      
    - name: Check for hex colors in new changes
      run: |
        echo "Checking for new hardcoded hex colors..."
        
        # Get changed files
        git fetch origin main
        CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep -E '\.(css|html)$' || true)
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "No CSS or HTML files changed"
          exit 0
        fi
        
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        # Check for hex colors in changed lines
        HEX_FOUND=0
        for file in $CHANGED_FILES; do
          if [ -f "$file" ]; then
            # Check for hex colors that aren't in CSS variables
            MATCHES=$(git diff origin/main...HEAD -- "$file" | grep '^+' | grep -E '#[0-9a-fA-F]{6}' | grep -v 'var(' || true)
            if [ -n "$MATCHES" ]; then
              echo "‚ö†Ô∏è  Hex colors found in $file:"
              echo "$MATCHES"
              HEX_FOUND=1
            fi
          fi
        done
        
        if [ $HEX_FOUND -eq 1 ]; then
          echo ""
          echo "‚ö†Ô∏è  Warning: Hardcoded hex colors detected in changes"
          echo "Consider using MD3 theme variables instead."
          echo "See docs/STYLE-MD3-EXPRESSIVE.md for migration guide."
          # Don't fail, just warn
          exit 0
        else
          echo "‚úÖ No new hardcoded hex colors detected"
        fi
        
    - name: Upload token check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: token-check-results
        path: token-check.log
        
    - name: Comment on PR
      if: steps.token-check.outputs.status == 'warn'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const log = fs.readFileSync('token-check.log', 'utf8');
          
          const body = `## üé® Style Check Results
          
          The token replacement checker found some hardcoded values that could be migrated to MD3 theme variables.
          
          <details>
          <summary>View findings</summary>
          
          \`\`\`
          ${log}
          \`\`\`
          
          </details>
          
          **Note:** This is informational only. Consider migrating to theme variables for consistency.
          
          See [STYLE-MD3-EXPRESSIVE.md](../docs/STYLE-MD3-EXPRESSIVE.md) for the migration guide.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
